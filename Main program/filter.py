import numpy as np

class Filter:
    
    coefficients_lowpass_HR = [7.7519e-05, -2.1943e-19, -0.00017507, -0.0002844, -0.0001234, 0.00030536, 0.00066201,
                            0.0004875, -0.00031655, -0.0011887, -0.0012209, 1.9897e-18, 0.0017329, 0.0023996,
                            0.00091246, -0.0020194, -0.0039765, -0.0026926, 0.001624, 0.0057127, 0.0055361,
                            -5.7122e-18, -0.007128, -0.0094788, -0.003479, 0.0074684, 0.014336, 0.0095102, -0.0056493,
                            -0.019686, -0.019019, 9.8548e-18, 0.024919, 0.033935, 0.01293, -0.029337, -0.061027,
                            -0.045529, 0.032296, 0.15036, 0.25711, 0.30003, 0.25711, 0.15036, 0.032296, -0.045529,
                            -0.061027, -0.029337, 0.01293, 0.033935, 0.024919, 9.8548e-18, -0.019019, -0.019686,
                            -0.0056493, 0.0095102, 0.014336, 0.0074684, -0.003479, -0.0094788, -0.007128, -5.7122e-18,
                            0.0055361, 0.0057127, 0.001624, -0.0026926, -0.0039765, -0.0020194, 0.00091246, 0.0023996,
                            0.0017329, 1.9897e-18, -0.0012209, -0.0011887, -0.00031655, 0.0004875, 0.00066201,
                            0.00030536, -0.0001234, -0.0002844, -0.00017507, -2.1943e-19, 7.7519e-05]
    coefficients_highpass_HR = [7.7519e-05, -2.1943e-19, -0.00017507, -0.0002844, -0.0001234, 0.00030536, 0.00066201,
                            0.0004875, -0.00031655, -0.0011887, -0.0012209, 1.9897e-18, 0.0017329, 0.0023996,
                            0.00091246, -0.0020194, -0.0039765, -0.0026926, 0.001624, 0.0057127, 0.0055361,
                            -5.7122e-18, -0.007128, -0.0094788, -0.003479, 0.0074684, 0.014336, 0.0095102, -0.0056493,
                            -0.019686, -0.019019, 9.8548e-18, 0.024919, 0.033935, 0.01293, -0.029337, -0.061027,
                            -0.045529, 0.032296, 0.15036, 0.25711, 0.30003, 0.25711, 0.15036, 0.032296, -0.045529,
                            -0.061027, -0.029337, 0.01293, 0.033935, 0.024919, 9.8548e-18, -0.019019, -0.019686,
                            -0.0056493, 0.0095102, 0.014336, 0.0074684, -0.003479, -0.0094788, -0.007128, -5.7122e-18,
                            0.0055361, 0.0057127, 0.001624, -0.0026926, -0.0039765, -0.0020194, 0.00091246, 0.0023996,
                            0.0017329, 1.9897e-18, -0.0012209, -0.0011887, -0.00031655, 0.0004875, 0.00066201,
                            0.00030536, -0.0001234, -0.0002844, -0.00017507, -2.1943e-19, 7.7519e-05]
    coefficients_lowpass_RR = [0.00039575,0.00041817,0.00040248,0.00034199,0.00023366,7.8999e-05,-0.00011532,-0.00033736,-0.00057036,-0.00079364,-0.00098416,-0.0011184,-0.0011747,-0.0011354,-0.00098936,-0.00073383,-0.00037573,6.7617e-05,0.00056874,0.0010913,0.0015921,0.0020245,0.0023419,0.002502,0.0024711,0.0022279,0.0017673,0.0011021,0.0002644,-0.00069535,-0.0017104,-0.0027019,-0.0035839,-0.0042702,-0.0046815,-0.0047528,-0.0044402,-0.0037271,-0.0026278,-0.0011903,0.00050459,0.0023464,0.0042008,0.0059178,0.0073427,0.0083269,0.0087413,0.0084878,0.00751,0.0058025,0.0034161,0.00045984,-0.0029005,-0.0064488,-0.0099288,-0.013058,-0.015544,-0.017102,-0.017477,-0.016459,-0.013901,-0.0097329,-0.0039709,0.0032784,0.011819,0.021372,0.031586,0.042059,0.052352,0.062018,0.070624,0.077776,0.08314,0.086464,0.08759,0.086464,0.08314,0.077776,0.070624,0.062018,0.052352,0.042059,0.031586,0.021372,0.011819,0.0032784,-0.0039709,-0.0097329,-0.013901,-0.016459,-0.017477,-0.017102,-0.015544,-0.013058,-0.0099288,-0.0064488,-0.0029005,0.00045984,0.0034161,0.0058025,0.00751,0.0084878,0.0087413,0.0083269,0.0073427,0.0059178,0.0042008,0.0023464,0.00050459,-0.0011903,-0.0026278,-0.0037271,-0.0044402,-0.0047528,-0.0046815,-0.0042702,-0.0035839,-0.0027019,-0.0017104,-0.00069535,0.0002644,0.0011021,0.0017673,0.0022279,0.0024711,0.002502,0.0023419,0.0020245,0.0015921,0.0010913,0.00056874,6.7617e-05,-0.00037573,-0.00073383,-0.00098936,-0.0011354,-0.0011747,-0.0011184,-0.00098416,-0.00079364,-0.00057036,-0.00033736,-0.00011532,7.8999e-05,0.00023366,0.00034199,0.00040248,0.00041817,0.00039575]
    coefficients_highpass_RR = [5.0237e-05,5.6915e-05,6.3829e-05,7.0964e-05,7.8304e-05,8.583e-05,9.3522e-05,0.00010136,0.00010932,0.00011738,0.00012551,0.00013369,0.00014188,0.00015007,0.00015821,0.00016628,0.00017424,0.00018206,0.00018971,0.00019715,0.00020435,0.00021127,0.00021787,0.00022411,0.00022996,0.00023538,0.00024033,0.00024478,0.00024868,0.00025201,0.00025472,0.00025677,0.00025814,0.00025879,0.00025869,0.00025781,0.0002561,0.00025356,0.00025014,0.00024582,0.00024059,0.00023441,0.00022728,0.00021916,0.00021005,0.00019994,0.00018882,0.00017668,0.00016351,0.00014932,0.00013411,0.00011789,0.00010066,8.2437e-05,6.3239e-05,4.3084e-05,2.1996e-05,1.6959e-18,-2.2872e-05,-4.6587e-05,-7.1108e-05,-9.6392e-05,-0.00012239,-0.00014907,-0.00017636,-0.00020421,-0.00023257,-0.00026137,-0.00029054,-0.00032002,-0.00034974,-0.00037961,-0.00040956,-0.00043951,-0.00046938,-0.00049908,-0.00052851,-0.0005576,-0.00058625,-0.00061437,-0.00064185,-0.00066861,-0.00069455,-0.00071956,-0.00074355,-0.00076642,-0.00078807,-0.0008084,-0.00082732,-0.00084473,-0.00086052,-0.00087461,-0.0008869,-0.0008973,-0.00090573,-0.00091209,-0.00091631,-0.0009183,-0.00091799,-0.00091531,-0.00091018,-0.00090255,-0.00089236,-0.00087954,-0.00086406,-0.00084587,-0.00082493,-0.00080122,-0.0007747,-0.00074536,-0.00071319,-0.00067818,-0.00064034,-0.00059967,-0.0005562,-0.00050995,-0.00046096,-0.00040926,-0.0003549,-0.00029795,-0.00023847,-0.00017653,-0.00011222,-4.5618e-05,2.3164e-05,9.4022e-05,0.00016684,0.0002415,0.00031786,0.00039578,0.00047513,0.00055573,0.00063743,0.00072006,0.00080344,0.00088739,0.00097171,0.0010562,0.0011407,0.0012249,0.0013087,0.0013918,0.0014741,0.0015552,0.0016349,0.0017131,0.0017894,0.0018637,0.0019357,0.0020051,0.0020717,0.0021352,0.0021955,0.0022522,0.0023052,0.0023541,0.0023988,0.0024389,0.0024743,0.0025048,0.00253,0.0025499,0.0025641,0.0025724,0.0025747,0.0025708,0.0025604,0.0025434,0.0025196,0.0024889,0.002451,0.0024059,0.0023534,0.0022934,0.0022258,0.0021505,0.0020674,0.0019763,0.0018774,0.0017704,0.0016554,0.0015324,0.0014013,0.0012622,0.001115,0.00095982,0.00079671,0.00062572,0.00044694,0.00026045,6.6362e-05,-0.00013519,-0.00034408,-0.00056014,-0.00078321,-0.0010131,-0.0012496,-0.0014926,-0.0017417,-0.0019968,-0.0022575,-0.0025238,-0.0027951,-0.0030713,-0.0033521,-0.0036372,-0.0039261,-0.0042187,-0.0045144,-0.0048131,-0.0051143,-0.0054177,-0.0057228,-0.0060293,-0.0063368,-0.0066449,-0.0069532,-0.0072613,-0.0075687,-0.0078752,-0.0081801,-0.0084832,-0.008784,-0.0090821,-0.0093771,-0.0096685,-0.009956,-0.010239,-0.010518,-0.010791,-0.011058,-0.01132,-0.011575,-0.011824,-0.012066,-0.0123,-0.012526,-0.012744,-0.012954,-0.013155,-0.013347,-0.01353,-0.013703,-0.013866,-0.014019,-0.014161,-0.014293,-0.014414,-0.014525,-0.014624,-0.014712,-0.014788,-0.014853,-0.014906,-0.014947,-0.014977,-0.014995,0.98505,-0.014995,-0.014977,-0.014947,-0.014906,-0.014853,-0.014788,-0.014712,-0.014624,-0.014525,-0.014414,-0.014293,-0.014161,-0.014019,-0.013866,-0.013703,-0.01353,-0.013347,-0.013155,-0.012954,-0.012744,-0.012526,-0.0123,-0.012066,-0.011824,-0.011575,-0.01132,-0.011058,-0.010791,-0.010518,-0.010239,-0.009956,-0.0096685,-0.0093771,-0.0090821,-0.008784,-0.0084832,-0.0081801,-0.0078752,-0.0075687,-0.0072613,-0.0069532,-0.0066449,-0.0063368,-0.0060293,-0.0057228,-0.0054177,-0.0051143,-0.0048131,-0.0045144,-0.0042187,-0.0039261,-0.0036372,-0.0033521,-0.0030713,-0.0027951,-0.0025238,-0.0022575,-0.0019968,-0.0017417,-0.0014926,-0.0012496,-0.0010131,-0.00078321,-0.00056014,-0.00034408,-0.00013519,6.6362e-05,0.00026045,0.00044694,0.00062572,0.00079671,0.00095982,0.001115,0.0012622,0.0014013,0.0015324,0.0016554,0.0017704,0.0018774,0.0019763,0.0020674,0.0021505,0.0022258,0.0022934,0.0023534,0.0024059,0.002451,0.0024889,0.0025196,0.0025434,0.0025604,0.0025708,0.0025747,0.0025724,0.0025641,0.0025499,0.00253,0.0025048,0.0024743,0.0024389,0.0023988,0.0023541,0.0023052,0.0022522,0.0021955,0.0021352,0.0020717,0.0020051,0.0019357,0.0018637,0.0017894,0.0017131,0.0016349,0.0015552,0.0014741,0.0013918,0.0013087,0.0012249,0.0011407,0.0010562,0.00097171,0.00088739,0.00080344,0.00072006,0.00063743,0.00055573,0.00047513,0.00039578,0.00031786,0.0002415,0.00016684,9.4022e-05,2.3164e-05,-4.5618e-05,-0.00011222,-0.00017653,-0.00023847,-0.00029795,-0.0003549,-0.00040926,-0.00046096,-0.00050995,-0.0005562,-0.00059967,-0.00064034,-0.00067818,-0.00071319,-0.00074536,-0.0007747,-0.00080122,-0.00082493,-0.00084587,-0.00086406,-0.00087954,-0.00089236,-0.00090255,-0.00091018,-0.00091531,-0.00091799,-0.0009183,-0.00091631,-0.00091209,-0.00090573,-0.0008973,-0.0008869,-0.00087461,-0.00086052,-0.00084473,-0.00082732,-0.0008084,-0.00078807,-0.00076642,-0.00074355,-0.00071956,-0.00069455,-0.00066861,-0.00064185,-0.00061437,-0.00058625,-0.0005576,-0.00052851,-0.00049908,-0.00046938,-0.00043951,-0.00040956,-0.00037961,-0.00034974,-0.00032002,-0.00029054,-0.00026137,-0.00023257,-0.00020421,-0.00017636,-0.00014907,-0.00012239,-9.6392e-05,-7.1108e-05,-4.6587e-05,-2.2872e-05,1.6959e-18,2.1996e-05,4.3084e-05,6.3239e-05,8.2437e-05,0.00010066,0.00011789,0.00013411,0.00014932,0.00016351,0.00017668,0.00018882,0.00019994,0.00021005,0.00021916,0.00022728,0.00023441,0.00024059,0.00024582,0.00025014,0.00025356,0.0002561,0.00025781,0.00025869,0.00025879,0.00025814,0.00025677,0.00025472,0.00025201,0.00024868,0.00024478,0.00024033,0.00023538,0.00022996,0.00022411,0.00021787,0.00021127,0.00020435,0.00019715,0.00018971,0.00018206,0.00017424,0.00016628,0.00015821,0.00015007,0.00014188,0.00013369,0.00012551,0.00011738,0.00010932,0.00010136,9.3522e-05,8.583e-05,7.8304e-05,7.0964e-05,6.3829e-05,5.6915e-05,5.0237e-05]
    
    
    def __init__(self,filter):
        if filter == 'highpass_HR':
            self.coefficients = Filter.coefficients_highpass_HR
        elif filter == 'lowpass_HR':
            self.coefficients = Filter.coefficients_lowpass_HR
        elif filter == 'highpass_RR':
            self.coefficients = Filter.coefficients_highpass_RR
        elif filter == 'lowpass_RR':
            self.coefficients = Filter.coefficients_lowpass_RR
        
        self.length_of_input_vector = len(self.coefficients)  # Length of coefficient vector and length of input vector
        self.input_vector = np.zeros(self.length_of_input_vector)  # the same length as coefficients.
        self.input_vector_index = 0  # to know where the latest input value is in input_vector


    def filter(self, input_value):  # send input value
        self.input_vector[self.input_vector_index] = input_value  # saves the input data in a vector continuously

        output = 0  # to add all coefficients*values
        iterate_index = self.input_vector_index  # because variable value is changed in order to loop array
        for i in range(0, self.length_of_input_vector - 1):  # iterate over all coefficients and relevant input values
            if iterate_index - i < 0:  # if iterate_index is negative begin from right hand side and work our way to the left
                iterate_index = self.length_of_input_vector + i - 1  # moving to the rightmost location of array
            output += self.coefficients[i] * self.input_vector[iterate_index - i]  # add value of coefficient*data

        self.input_vector_index += 1  # Note index += 1 before if statement
        if self.input_vector_index == self.length_of_input_vector:  # len(input_vector = N)
            self.input_vector_index = 0
        return output



